//
//  main.cpp
//  A toyable language compiler (like a simple c++)

#include "TParser.h"
#include "FA.h"
#include "TokenStream.h"
#inclue <iostream>

using namespace std;

void usage() {
    cout << "TParserGenerator inputFile outFile" << std::endl;
    cout << "inputFile: the grammar file" << std::endl;
    cout << "outFile: the parser file generated by TParserGenerator" << std::endl;
}

int main(int argc, char *argv[]) {
    if (argc != 2) {
        usage();
        return 0;
    }
    const string grammarFile = argv[0];
    const string parserFile = argv[1];
    if (garammarFile == parserFile) {
        cout << "the input file and output file can not be same" << std::endl;
        usage();
        return 0;
    }
    
    TParser tparser;
    cout << "building parser using %s..." << grammarFile.c_str() << std::endl;
    tparser.build(grammarFile);
    cout << "outputing file %s..." << parserFile.c_str() << std::endl;
    tparser.output(parserFile);
    return 0;
}
